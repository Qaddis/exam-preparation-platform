generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Роли пользователей
enum Role {
  STUDENT
  TEACHER
}

// Модель пользователя
model User {
  id String @id @default(cuid())

  email    String @unique // E-mail
  password String // Пароль
  name     String // Имя

  role Role @default(STUDENT) // Роль (ученик/учитель)

  // Примеры, которые решил (ученик)
  solved Exercise[] @relation("DecidedExercises")

  // Классы, в которых состоит (ученик)
  classrooms Classroom[] @relation("ClassroomStudents")

  // Классы, которые создал (учитель)
  teaching Classroom[] @relation("TeacherClassrooms")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

// Модель класса
model Classroom {
  id String @id @default(cuid())

  teacher   User   @relation("TeacherClassrooms", fields: [teacherId], references: [id]) // Учитель
  teacherId String @map("teacher_id") // ID учителя

  students User[] @relation("ClassroomStudents") // Список учеников

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

// Модель задания
model Exercise {
  id String @id @default(cuid())

  problem   String // Текст задачи
  answer    String // Ответ
  available DateTime // Время, до которого задача будет доступна

  decided User[] @relation("DecidedExercises") // Список пользователей, которые решили задачу

  createdAt DateTime @default(now()) @map("created_at")
}
